#BAR GRAPHS FOR BINARY

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Define file paths
original_data_path = r'MERGED DATA UPDATED (EVERYTHINGout).xlsx'
knn_imputed_data_path = r"imputed_dataset_0.1_knn.xlsx"
mice_imputed_data_path = r"imputed_data_0.1_mice.xlsx"

# Read the data
original_data = pd.read_excel(original_data_path)
knn_imputed_data = pd.read_excel(knn_imputed_data_path)
mice_imputed_data = pd.read_excel(mice_imputed_data_path)

# Combine data frames and add a column to identify the source
original_data['source'] = 'Original'
knn_imputed_data['source'] = 'k-NN Imputed'
mice_imputed_data['source'] = 'MICE Imputed'

# Concatenate data frames
combined_data = pd.concat([original_data, knn_imputed_data, mice_imputed_data], ignore_index=True)

# Columns of interest
columns_of_interest = [
 'ambulate', 'aorticBalloon', 'arrythmia', 'BIS',
    'cervascD', 'civilianCPR', 'civilianDefib', 'cogImpair', 'contissD', 'contNeuroMuscBlock', 'COPD',
    'coronAngio', 'CPRmed', 'CTicu', 'CTsixH', 'deepSedation', 'defib', 'DNR', 'ECGresult', 'EEGcont', 'EEGicu', 'heartFail',
    'hospTransfer', 'hypertension', 'ICUconditionAgit', 'ICUconditionAmb', 'ICUconditionCalm', 'ICUconditionDead',
    'ICUconditionDisorient', 'ICUconditionNonamb', 'ICUconditionNoninteract', 'ICUconditionOrient', 
    'insulinDep', 'intermittentNeuroMuscBlock', 'leukemia', 'lightSedation', 'liverD', 'LSwithdraw',
    'majorBleed', 'maligTumor', 'MAP60', 'MAP60sustain', 'mechCD', 'MRIicu', 'myoclonus', 'myoInfarc', 'noninsulinDep', 'noSedation',
    'obesity', 'obeyCommand', 'obeyCommandAdmission', 'openheartSurg', 'otherMechSupport', 'PaO2300', 'PaO260',
    'percutCoronIntervention', 'perivascD', 'pneumonia', 'prevHealth', 'prophylacticAnticonvulsant',
    'raiseArms', 'rearrest', 'renalD', 'sedationForSeizure', 'seizureAfterTargTemp',
    'seizureBeforeTargTemp', 'seizureDuringTargTemp', 'seizureGeneral', 'seizureNone', 'seizurePartial',
    'seizureSubtle', 'sex', 'shiver', 'shock', 'spontBreath', 'SSEP', 'targTempAchieved',
    'targTempAdmin', 'targTempArrythmia', 'targTempAwoke', 'targTempBleed', 'targTempBrady',
    'targTempError', 'targTempHDinstab', 'targTempInter', 'targTempRemoveLS', 'targTempSepsis', 'targTempStop',
    'tempCTRLpostwarm', 'thrombolysis', 'vasopressors', 'witnessed']


# Create a figure with two subplots
fig, axes = plt.subplots(1, 2, figsize=(12, 6))


for col in columns_of_interest:
    plt.figure(figsize=(8, 6))  # Adjust the figure size as needed
    sns.countplot(data=combined_data, x=col, hue='source', palette='Set1')
    plt.title(f"Distribution of {col} in Original, k-NN, and MICE data @ 10%")
    plt.xlabel(col)
    plt.ylabel("Count")
    plt.legend(title="Source", loc="upper left", bbox_to_anchor=(1, 1))
    plt.tight_layout()
    plt.show()
